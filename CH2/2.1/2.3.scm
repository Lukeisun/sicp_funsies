#lang sicp
(define (make-segment start end)
  (cons start end))
(define (start-segment segment)
  (car segment))
(define (end-segment segment)
  (cdr segment))
(define (make-point x y) (cons x y))
(define (x-point point) (car point))
(define (y-point point) (cdr point))
(define (make-rectangle seg1 seg2)
  (cons seg1 seg2))
(define (make-rect width height)
  (define width-point (make-point width 0))
  (define height-point (make-point 0 height))
  (define zero-point (make-point 0 0))
  (let ((seg1 (make-segment zero-point width-point))
        (seg2 (make-segment zero-point height-point)))
    (cons seg1 seg2)))
(define (rect-seg1 rect)
  (car rect))
(define (rect-seg2 rect)
  (cdr rect))
(define (width rect)
  (define seg1 (rect-seg1 rect))
  (define seg2 (rect-seg2 rect))
  (if (= (x-point (start-segment seg1)) (x-point (end-segment seg1)))
      (abs (- (x-point (start-segment seg2)) (x-point (end-segment seg2))))
      (abs (- (x-point (start-segment seg1)) (x-point (end-segment seg1))))))
(define (height rect)
  (define seg1 (rect-seg1 rect))
  (define seg2 (rect-seg2 rect))
  (if (= (y-point (start-segment seg1)) (y-point (end-segment seg1)))
      (abs (- (y-point (start-segment seg2)) (y-point (end-segment seg2))))
      (abs (- (y-point (start-segment seg1)) (y-point (end-segment seg1))))))
(define (area rect)
  (* (width rect) (height rect))
  )
(define (perimeter rect)
  (+ (* (width rect) 2) (* (height rect) 2)))
(define rectangle (make-rect 10 15))
(area rectangle)
(perimeter rectangle)

(define p1 (make-point 10 10))
(define p2 (make-point 10 20))
(define p3 (make-point 30 20))
(define seg1 (make-segment p1 p2))
(define seg2 (make-segment p1 p3))
(define rectangle2 (make-rectangle seg1 seg2))
(area rectangle2)
(perimeter rectangle2)
(define rectangle3 (make-rectangle seg2 seg1))
(area rectangle3)
(perimeter rectangle3)
;; kinda ugly but it fits the problem :D
;; make-rect relies only on width and height
;; make-rectangle is defined by 2 segments
;; ^ that are validly formed :)
;; maybe this is cheating though :(

